import { container } from "tsyringe";
import { tokens } from "./tokens";
import { Config } from "@config/config";
import CoreService from "@domain/core/services/coreService";
import CoreRepository from "@domain/core/infrastructure/coreRepository";
import ApmClient from "@infrastructure/apm/apm";
import EmailClient from "@infrastructure/email/email";
import SyncBalanceCommand from "@presentation/commands/syncBalanceCommand";
import SystemService from "@domain/system/services/systemService";
import SystemRepository from "@domain/system/infrastructure/systemRepository";
import HealthcheckCommand from "@presentation/commands/healthcheckCommand";
import BrapiService from "@domain/brapi/services/brapiService";
import BrapiRepository from "@domain/brapi/infrastructure/brapiRepository";
import IexcloundService from "@domain/iexclound/services/iexcloundService";
import IexcloundRepository from "@domain/iexclound/infrastructure/iexcloundRepository";
import InvestService from "@domain/invest/services/investService";
import InvestRepository from "@domain/invest/infrastructure/investRepository";
import SyncDividendsAcaoCommand from "@presentation/commands/syncDividendsAcaoCommand";
import SyncDividendsBrdCommand from "@presentation/commands/syncDividendsBrdCommand";
import SyncDividendsStocksCommand from "@presentation/commands/syncDividendsStocksCommand";
import SyncDividendsFundsCommand from "@presentation/commands/syncDividendsFundsCommand";
import SyncEventsAcaoCommand from "@presentation/commands/syncEventsAcaoCommand";
import SyncDividendsPaidCommand from "@presentation/commands/syncDividendsPaidCommand";
import MarketPriceCommand from "@presentation/commands/marketPriceCommand";
import NotifyPriceDayCommand from "@presentation/commands/notifyPriceDayCommand";
import BackupCommand from "@presentation/commands/backupCommand";
import SyncEventsBrdCommand from "@presentation/commands/syncEventsBrdCommand";
import SyncEventsFundsCommand from "@presentation/commands/syncEventsFundsCommand";

const childContainer = container.createChildContainer();

childContainer.registerSingleton(tokens.Config, Config);
childContainer.registerSingleton(tokens.EmailClient, EmailClient);
childContainer.registerSingleton(tokens.ApmClient, ApmClient);
childContainer.registerSingleton(tokens.CoreService, CoreService);
childContainer.registerSingleton(tokens.CoreRepository, CoreRepository);
childContainer.registerSingleton(tokens.BrapiService, BrapiService);
childContainer.registerSingleton(tokens.BrapiRepository, BrapiRepository);
childContainer.registerSingleton(tokens.IexcloundService, IexcloundService);
childContainer.registerSingleton(tokens.IexcloundRepository, IexcloundRepository);
childContainer.registerSingleton(tokens.InvestService, InvestService);
childContainer.registerSingleton(tokens.InvestRepository, InvestRepository);
childContainer.registerSingleton(tokens.SystemService, SystemService);
childContainer.registerSingleton(tokens.SystemRepository, SystemRepository);
childContainer.registerSingleton(tokens.Commands, MarketPriceCommand);
childContainer.registerSingleton(tokens.Commands, SyncBalanceCommand);
childContainer.registerSingleton(tokens.Commands, SyncDividendsAcaoCommand);
childContainer.registerSingleton(tokens.Commands, SyncDividendsBrdCommand);
childContainer.registerSingleton(tokens.Commands, SyncDividendsFundsCommand);
childContainer.registerSingleton(tokens.Commands, SyncDividendsStocksCommand);
childContainer.registerSingleton(tokens.Commands, SyncDividendsPaidCommand);
childContainer.registerSingleton(tokens.Commands, SyncEventsAcaoCommand);
childContainer.registerSingleton(tokens.Commands, SyncEventsBrdCommand);
childContainer.registerSingleton(tokens.Commands, SyncEventsFundsCommand);
childContainer.registerSingleton(tokens.Commands, NotifyPriceDayCommand);
childContainer.registerSingleton(tokens.Commands, HealthcheckCommand);
childContainer.registerSingleton(tokens.Commands, BackupCommand);

export { childContainer as container };